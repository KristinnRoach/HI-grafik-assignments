// // InputManager.ts
// import { GameEventEmitter } from './EventEmitter';
// import { Direction, GameEvents } from '../types/types';

// export class InputManager {
//   private static readonly instance: InputManager = new InputManager();
//   private readonly keyState = new Map<string, boolean>();
//   private readonly eventEmitter = new GameEventEmitter();

//   private readonly directionKeys: Record<string, Direction> = {
//     ArrowUp: 'up',
//     ArrowDown: 'down',
//     ArrowLeft: 'left',
//     ArrowRight: 'right',
//   };

//   private constructor() {
//     if (InputManager.instance) {
//       throw new Error(
//         'Error: Instantiation failed. Use InputManager.getInstance()'
//       );
//     }

//     this.setupEventListeners();
//   }

//   private setupEventListeners(): void {
//     window.addEventListener('keydown', (e) => this.handleKeyDown(e));
//     window.addEventListener('keyup', (e) => this.handleKeyUp(e));
//   }

//   private handleKeyDown(event: KeyboardEvent): void {
//     const direction = this.directionKeys[event.key];
//     if (direction && !this.keyState.get(event.key)) {
//       this.keyState.set(event.key, true);
//       this.eventEmitter.emit('move', direction);
//     }
//   }

//   private handleKeyUp(event: KeyboardEvent): void {
//     if (this.directionKeys[event.key]) {
//       this.keyState.set(event.key, false);
//     }
//   }

//   public static getInstance(): InputManager {
//     return InputManager.instance;
//   }

//   public onMove(handler: GameEvents['move']): () => void {
//     return this.eventEmitter.on('move', handler);
//   }

//   public dispose(): void {
//     window.removeEventListener('keydown', (e) => this.handleKeyDown(e));
//     window.removeEventListener('keyup', (e) => this.handleKeyUp(e));
//   }
// }
